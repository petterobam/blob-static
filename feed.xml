<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh"><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="zh" /><updated>2023-09-07T09:09:19+00:00</updated><id>/</id><title type="html">欧阳Boy_Petter's Blog</title><subtitle>个人GitHub博客.</subtitle><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><entry><title type="html">【经验】ChatGPT的Prompt模板总结</title><link href="/blog/2023/05/07/gpt-prompt/" rel="alternate" type="text/html" title="【经验】ChatGPT的Prompt模板总结" /><published>2023-05-07T00:00:00+00:00</published><updated>2023-05-07T00:00:00+00:00</updated><id>/blog/2023/05/07/gpt-prompt</id><content type="html" xml:base="/blog/2023/05/07/gpt-prompt/">&lt;h1 id=&quot;heading-背景&quot;&gt;背景&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;ChatGPT： OpenAI 公司推出的自然语言聊天工具，拥有很好的语言组织能力和知识储备，可以作为个人的第二大脑。&lt;/li&gt;
  &lt;li&gt;AutoGPT： 基于 ChatGPT 的任务目标实现机制，拥有强大的自我组织能力。&lt;/li&gt;
  &lt;li&gt;LangGPT： 一种系统的、优化性的 Prompt 生成工具，可以根据不同的任务目标生成不同的 Prompt 模板。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;未来，Prompt 工程师将是一个趋势，个人的能力也会随着 AI 技术发展迅速加强。
在可预见的 5 年内，AI 的进步将是近百年的高峰期，最好抓住这个机会为自身赋能。
5 年后，由于网络资料的匮乏（人类文明资料积累已经被 AI 训练完），AI 升级可能会陷入瓶颈。
以下是个人使用和记录的一些 AI 指令明确的模板，可供参考。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;一些提供 Prompt 的网站&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://snackprompt.com&quot;&gt;http://snackprompt.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://flowgpt.com&quot;&gt;http://flowgpt.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://prompthero.com&quot;&gt;http://prompthero.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://publicprompts.art&quot;&gt;http://publicprompts.art&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://learningprompt.wiki&quot;&gt;http://learningprompt.wiki&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.promptingguide.ai/zh&quot;&gt;https://www.promptingguide.ai/zh&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;一些 AI 工具&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;AI工具集：&lt;a href=&quot;https://ai-bot.cn/&quot;&gt;https://ai-bot.cn/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;AI工具：
    &lt;ul&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;chatppt：&lt;a href=&quot;https://chat-ppt.com/&quot;&gt;https://chat-ppt.com/&lt;/a&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;思维导图：&lt;a href=&quot;https://www.chatmind.tech/&quot;&gt;https://www.chatmind.tech/&lt;/a&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;chatexel：&lt;a href=&quot;https://chatexcel.com/&quot;&gt;https://chatexcel.com/&lt;/a&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;AI 写周报：&lt;a href=&quot;https://aibang.run/tool/weekly-report&quot;&gt;https://aibang.run/tool/weekly-report&lt;/a&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;AI 读文档：&lt;a href=&quot;https://chatdoc.com/chatdoc/#/upload&quot;&gt;https://chatdoc.com/chatdoc/#/upload&lt;/a&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;AI 剪辑/设计：&lt;a href=&quot;https://www.heygen.com/?from=moviola&quot;&gt;https://www.heygen.com/?from=moviola&lt;/a&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;VERSE：&lt;a href=&quot;https://v.yinxiang.com&quot;&gt;https://v.yinxiang.com&lt;/a&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;镜像网站：
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://mirrorchat.extkj.cn/&quot;&gt;https://mirrorchat.extkj.cn/&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://chat.waixingyun.cn/#/home&quot;&gt;https://chat.waixingyun.cn/#/home&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;heading-基础&quot;&gt;基础&lt;/h1&gt;

&lt;p&gt;利用简单的 Prompt 语句，指示 GPT 生成文本。&lt;/p&gt;

&lt;h2 id=&quot;heading-创作&quot;&gt;创作&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;你是一个 {机器人名字/职业}，一个为 {公司/个人名} 工作的友好的 {职业}。您的目标是使用我找到可用的信息（如果适用）。即使你在知识库中找不到相关信息，你也会很有创造力，尽你所能满足要求。您将帮助我完成各种任务，包括但不限于：{撰写小说/翻译内容/...}。如果您无法对我的最后一条消息提供可靠的响应，请访问此 URL：{参考文档地址} ，您的回复必须与我的请求使用相同的语言，并且在适当的时候要长而详细。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-概括&quot;&gt;概括&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;把用&amp;lt;&amp;gt;括起来的文本总结成一句话。
&amp;lt;{text}&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-聊天&quot;&gt;聊天&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;我想给{聊天对象身份或名字}发消息聊天。
包含：{你聊天想要表达的内容}
{聊天对象的特征和期望：和你的关系/他的性格/你期望达到的效果}

------------------

我想给我的一位远方的朋友发消息聊天。
包含：问候、询问那边的天气，并为她推荐一部我最近看过的很不错的电视剧《漫长的季节》。
她是一位并不熟悉的异性，我们有近半个月没有联系了，怎么发给她才不显得突兀？
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-翻译&quot;&gt;翻译&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;请将以下文本分别翻译成中文、英文、法语和西班牙语: 
&amp;lt;{需要翻译的内容}&amp;gt;

------------------

将以下消息分别翻译成英文和中文，并写成
    中文翻译：xxx
    英文翻译：yyy
    的格式：

&amp;lt;{需要翻译的内容}&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-润色&quot;&gt;润色&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;你是一位{某种专业领域角色}。
你的任务是{目标}。
根据通过“```”分隔的内容，生成结果。
需要阅读的内容：
```{需要阅读的内容}```

------------------

你是一位脱口秀撰稿人。
你的任务是修改原稿，使得其更加自然且口语化。
根据通过“```”分隔的内容，生成结果。
需要阅读的内容：
```{需要阅读的内容}```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-评价&quot;&gt;评价&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;你是一位客户服务的AI助手。
你的任务是给一位重要客户发送邮件回复。
根据客户通过“```”分隔的评价，生成回复以感谢客户的评价。提醒模型使用评价中的具体细节
用简明而专业的语气写信。
作为“AI客户代理”签署电子邮件。
客户评论：
```{需要阅读的内容}```
评论情感：{评价携带的情感}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-解题&quot;&gt;解题&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;请判断{学生/员工/某某}的解决方案是否正确，请通过如下步骤解决这个问题：

步骤：

    首先，自己解决问题。
    然后，将你的解决方案与{学生/员工/某某}的解决方案进行比较，并评估{学生/员工/某某}的解决方案是否正确。
    在自己完成问题之前，请勿决定{学生/员工/某某}的解决方案是否正确。

使用以下格式：

    问题：问题文本
    {学生/员工/某某}的解决方案：{学生/员工/某某}的解决方案文本
    实际解决方案和步骤：实际解决方案和步骤
    {学生/员工/某某}的解决方案和实际解决方案是否相同：是或否
    {学生/员工/某某}的成绩：正确或不正确

问题：

    {要解决的问题描述}

{学生/员工/某某}的解决方案：

    {参考的解决方案}

实际解决方案和步骤：
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-明确&quot;&gt;明确&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;您将获得用&amp;lt;&amp;gt;括起来的文本。
如果它包含一系列的指令，则需要按照以下格式重新编写这些指令：

第一步 - ...
第二步 - …
…
第N步 - …

如果文本中不包含一系列的指令，则直接写“未提供步骤”。&quot;
&amp;lt;{text}&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-仿写&quot;&gt;仿写&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;你的任务是以一致的风格回答问题。
&amp;lt;{提问角色}&amp;gt;: {指令文本或引导1}

&amp;lt;{回答角色}&amp;gt;: {回答示例1}

&amp;lt;{提问角色}&amp;gt;: {指令文本或引导2}

----------------------------------
&amp;lt;孩子&amp;gt;: 教我耐心。

&amp;lt;祖父母&amp;gt;: 挖出最深峡谷的河流源于一处不起眼的泉眼；最宏伟的交响乐从单一的音符开始；最复杂的挂毯以一根孤独的线开始编织。

&amp;lt;孩子&amp;gt;: 教我韧性。

GPT： 
&amp;lt;祖父母&amp;gt;: 韧性就像是一棵树，它需要经历风吹雨打、寒冬酷暑，才能成长得更加坚强。在生活中，我们也需要经历各种挫折和困难，才能锻炼出韧性。记住，不要轻易放弃，坚持下去，你会发现自己变得更加坚强。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;heading-进阶&quot;&gt;进阶&lt;/h1&gt;

&lt;p&gt;利用特定的结构化 Prompt 语句，指示 GPT 生成符合要求的、完整的、系统的 Prompt 角色模板。&lt;/p&gt;

&lt;h2 id=&quot;heading-langgpt&quot;&gt;LangGPT&lt;/h2&gt;

&lt;p&gt;详细参见： &lt;a href=&quot;https://github.com/yzfly/LangGPT&quot;&gt;https://github.com/yzfly/LangGPT&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GPT 3.5&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yzfly/LangGPT/blob/main/LangGPT/ChatGPT3.5.txt&quot;&gt;https://github.com/yzfly/LangGPT/blob/main/LangGPT/ChatGPT3.5.txt&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GPT 4&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yzfly/LangGPT/blob/main/LangGPT/ChatGPT4.txt&quot;&gt;https://github.com/yzfly/LangGPT/blob/main/LangGPT/ChatGPT4.txt&lt;/a&gt;&lt;/p&gt;</content><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><category term="ChatGPT" /><category term="Prompt" /><summary type="html">背景</summary></entry><entry><title type="html">【专利】一种自我调控的众包审核装置</title><link href="/blog/2022/11/28/patent-2/" rel="alternate" type="text/html" title="【专利】一种自我调控的众包审核装置" /><published>2022-11-28T00:00:00+00:00</published><updated>2022-11-28T00:00:00+00:00</updated><id>/blog/2022/11/28/patent-2</id><content type="html" xml:base="/blog/2022/11/28/patent-2/">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;前一段时间，个人无聊，依据自己正在做的业务想到了一个专利。
专利内的内容是业务没有时间和精力去实现的，技术含量一般。
专利已经提交专利局。
考虑到专利原件由于被 “专业人员” 咬文嚼字到我读起来有点费脑的前提下；
我还是直接拿出我的专利交底书吧，至少上面是原汁原味的想法。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs/%E5%8F%91%E6%98%8E%E4%B8%93%E5%88%A9%E4%BA%A4%E5%BA%95%E4%B9%A6%EF%BC%9A%E4%B8%80%E7%A7%8D%E8%87%AA%E6%88%91%E8%B0%83%E6%8E%A7%E7%9A%84%E4%BC%97%E5%8C%85%E5%AE%A1%E6%A0%B8%E8%A3%85%E7%BD%AE_01.png&quot; alt=&quot;发明专利交底书：一种自我调控的众包审核装置_01&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;这个专利是顺手整理出来的，无他唯手熟尔。
技术含量一般，可参考。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;专利链接： http://www.soopat.com/Patent/202110791792&lt;/p&gt;</content><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><category term="专利" /><category term="众包" /><category term="池流转" /><summary type="html">前一段时间，个人无聊，依据自己正在做的业务想到了一个专利。 专利内的内容是业务没有时间和精力去实现的，技术含量一般。 专利已经提交专利局。 考虑到专利原件由于被 “专业人员” 咬文嚼字到我读起来有点费脑的前提下； 我还是直接拿出我的专利交底书吧，至少上面是原汁原味的想法。</summary></entry><entry><title type="html">【专利】音乐与创作之物联笔的分析与应用</title><link href="/blog/2022/10/27/patent-1/" rel="alternate" type="text/html" title="【专利】音乐与创作之物联笔的分析与应用" /><published>2022-10-27T00:00:00+00:00</published><updated>2022-10-27T00:00:00+00:00</updated><id>/blog/2022/10/27/patent-1</id><content type="html" xml:base="/blog/2022/10/27/patent-1/">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;前一段时间，个人无聊，凭空想象出来的。
专利已经提交专利局。
考虑到专利原件由于被 “专业人员” 咬文嚼字到我读起来有点费脑的前提下；
我还是直接拿出我的专利交底书吧，至少上面是原汁原味的想法。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs/%E5%8F%91%E6%98%8E%E4%B8%93%E5%88%A9%E4%BA%A4%E5%BA%95%E4%B9%A6%EF%BC%9A%E9%9F%B3%E4%B9%90%E4%B8%8E%E5%88%9B%E4%BD%9C%E4%B9%8B%E7%89%A9%E8%81%94%E7%AC%94%E7%9A%84%E5%88%86%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8V2_01.png&quot; alt=&quot;发明专利交底书：音乐与创作之物联笔的分析与应用V2_01&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;这个专利是凭空想出来的，无他唯手熟尔。
感觉技术含量不高，可以参考。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;专利链接： http://www.soopat.com/Patent/202110791792&lt;/p&gt;</content><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><category term="专利" /><category term="物联" /><summary type="html">前一段时间，个人无聊，凭空想象出来的。 专利已经提交专利局。 考虑到专利原件由于被 “专业人员” 咬文嚼字到我读起来有点费脑的前提下； 我还是直接拿出我的专利交底书吧，至少上面是原汁原味的想法。</summary></entry><entry><title type="html">【经验】日志框架冲突排查与常规日志依赖梳理</title><link href="/blog/2022/03/08/problems-of-logs-conflict-in-maven-project/" rel="alternate" type="text/html" title="【经验】日志框架冲突排查与常规日志依赖梳理" /><published>2022-03-08T00:00:00+00:00</published><updated>2022-03-08T00:00:00+00:00</updated><id>/blog/2022/03/08/problems-of-logs-conflict-in-maven-project</id><content type="html" xml:base="/blog/2022/03/08/problems-of-logs-conflict-in-maven-project/">&lt;h2 id=&quot;heading-背景&quot;&gt;背景&lt;/h2&gt;

&lt;p&gt;一次评论的需求上线，回归预发验证后，上线过程中总是偶发性的发布失败。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;排查记录，略
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;排包提交清单：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;强制指定 log4j-jcl 版本： 略&lt;/li&gt;
  &lt;li&gt;新引入包排包： 略&lt;/li&gt;
  &lt;li&gt;排除老包中 log4j-jcl依赖： 略&lt;/li&gt;
  &lt;li&gt;全局排除老包中 slf4j-log4j12 依赖： 略&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;heading-异常结论&quot;&gt;异常结论&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 迭代过程中引入新的依赖，导致依赖树发生变化
2. 历史隐藏的日志冲突导致偶发性的日志循环依赖启动异常（回归、预发启动正常，线上机器部分启动正常）
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;本次细节相关&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;jcl-over-slf4j 和 log4j-jcl 不能同时存在，否则容易造成类找不到等问题。
    &lt;ul&gt;
      &lt;li&gt;高版本的 log4j-core 拿掉了 log4j-jcl，如果 log4j-core 和 log4j-jcl 不一致，会造成 ClassNotFound
 &lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/13373471574/cd5a/ade3/d0aa/b57af5803fc2aaec301c62816d1d455a.png&quot; alt=&quot;启动异常&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;slf4j-log4j12 和 log4j-slf4j-imp 不能同时存在，否则容易出现循环依赖问题。
    &lt;ul&gt;
      &lt;li&gt;多绑定冲突： org.slf4j.spi.LoggerFactoryBinder 接口自己项目中查看实现类有多个
&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/13372196735/a03a/3569/bf88/4de1fab2121b846af3e6c9f61dc68cd8.png&quot; alt=&quot;启动异常&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;heading-知识点&quot;&gt;知识点&lt;/h2&gt;

&lt;p&gt;常规的日志框架如下，若以 log4j2 为主（绿色部分）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/13373396242/7826/3f17/98ae/46b1b674605779ffdcb5d11656846300.png&quot; alt=&quot;日志框架&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;区分 log4j 和 log4j2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;log4j 主要实现在 log4j:log4j.jar&lt;/li&gt;
  &lt;li&gt;log4j2 的依赖实现主要在 apache 的 &lt;strong&gt;log4j-api&lt;/strong&gt; 和 &lt;strong&gt;log4j-core&lt;/strong&gt; 两个包内&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;日志接口规范（slf4j）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;java 日志的通用 api： &lt;strong&gt;slf4j-api&lt;/strong&gt;（Simple Logging Facade for Java）
    &lt;ul&gt;
      &lt;li&gt;绑定 slf4j 主要是通过实现 slf4j-api 里面定义的 org.slf4j.spi.LoggerFactoryBinder 接口&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;log4j 绑定 slf4j： &lt;strong&gt;slf4j-log4j12&lt;/strong&gt;（与 5 互斥）&lt;/li&gt;
  &lt;li&gt;Log4j2 绑定slf4j： &lt;strong&gt;log4j-slf4j-impl&lt;/strong&gt;（与 4 互斥）&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;主日志框架之外的日志框架桥接&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;log4j 的 api 桥接到 Log4j2 输出： &lt;strong&gt;log4j-1.2-api&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;防止有些三方包使用了 log4j，将日志也桥接到 Log4j2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;log4j 桥接到 slf4j： &lt;strong&gt;log4j-over-slf4j&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;log4j2 桥接到 slf4j： &lt;strong&gt;log4j-to-slf4j&lt;/strong&gt;（如果以 log4j2 实现绑定 slf4j，则不需要桥接）&lt;/li&gt;
  &lt;li&gt;jcl 桥接到 slf4j： &lt;strong&gt;jcl-over-slf4j&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;jcl 全称为 Jakarta Commons Logging，是 Apache 提供的一个通用日志 API（commons-logging）&lt;/li&gt;
      &lt;li&gt;commons-logging 可能有两个 jar，分别是 commons-logging: commons-logging 和 org.apache.commons:commons-logging，都需要排掉&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;jul 桥接到 slf4j： &lt;strong&gt;jul-to-slf4j&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;java.util.logging.Logger（JDK）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;heading-相关资料&quot;&gt;相关资料&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;公司日志框架各个包的作用： 公司文档-略&lt;/li&gt;
  &lt;li&gt;日志框架之间的桥接和依赖： https://codeantenna.com/a/aW5ov78Flk&lt;/li&gt;
  &lt;li&gt;Jar包冲突检查工具： 公司文档-略&lt;/li&gt;
  &lt;li&gt;日志输出的疑难杂症： 公司文档-略&lt;/li&gt;
&lt;/ol&gt;</content><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><category term="日志" /><category term="依赖冲突" /><summary type="html">背景</summary></entry><entry><title type="html">仿TensorFlow懒执行编程和注解自编排</title><link href="/blog/2021/12/27/java-like-tensor-flow-to-run/" rel="alternate" type="text/html" title="仿TensorFlow懒执行编程和注解自编排" /><published>2021-12-27T00:00:00+00:00</published><updated>2021-12-27T00:00:00+00:00</updated><id>/blog/2021/12/27/java-like-tensor-flow-to-run</id><content type="html" xml:base="/blog/2021/12/27/java-like-tensor-flow-to-run/">&lt;p&gt;名为【仿TensorFlow懒执行编程和注解自编排】，在我的个人代办里面。
依稀记得是很久前学习 TensorFlow 的一个想法，年尾翻到，简要 finish 一下这个 idea，属于一种临时简要的探索实践。&lt;/p&gt;

&lt;h1 id=&quot;heading-背景&quot;&gt;背景&lt;/h1&gt;

&lt;p&gt;PS：&lt;a href=&quot;https://tensorflow.google.cn/learn?hl=zh-cn&quot;&gt;什么是 TensorFlow？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TensorFlow 里面有个图计算，先编排好计算流程，最后点执行直接渲染节点数据。我觉得这种功能可以用 Java 实现，于是就简单写了这个应用。&lt;/p&gt;

&lt;p&gt;下面我们来简单看下图计算模型是怎么样的渲染流程：&lt;/p&gt;

&lt;h2 id=&quot;heading-图计算&quot;&gt;图计算&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;如下有计算模型&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12335286877/e538/3808/de63/9d9bbe5efe132a20b6e26f7019f19b30.png&quot; alt=&quot;计算模型&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;getFive 渲染流程&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;getFive 的时候，会回溯计算 five 需要的值 second 和 fourth，
发现 second 的值需要通过 first、origin2 计算，origin2 是已知的值，
然后需要计算 first = origin1 + origin2，然后 second = first + origin2
依次回溯递推，依次将 first、second、third、fourth、five 全部计算出来，并赋值。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12335286883/08c8/6cd1/27ec/582cd32d1e65925e4b70bbe3184310b2.png&quot; alt=&quot;getFive&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;通过 getFive 的动作，我们发现原来的模型被渲染成了下面这样。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12335289339/0dfa/2eeb/8947/798876c93c9c78e9c5eb0f9b46bbe258.png&quot; alt=&quot;getFiveFinish&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;当节点被计算赋值后（变成绿色的那种）就可以直接被使用，如上，再 getSix 时候，直接可以根据 third 的值进行计算。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS： 那这种模型是否可用于业务代码呢？
1、复杂业务代码组装（过程变量可复用，自动化执行需要的步骤）
2、构建业务上下文，用于复杂业务处理支撑
3、对外提供简化版业务上下文，调用方按需直接获取，依赖按需加载，降低编码复杂度
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;heading-java-实现并应用&quot;&gt;Java 实现并应用&lt;/h1&gt;

&lt;p&gt;本来是想模拟 lombok 实现静态代码生成注入，这样可读性和性能会更好，不过先简单实现，后续有时间再研究和优化。&lt;/p&gt;

&lt;p&gt;代码只有一两百行，感兴趣参见： &lt;a href=&quot;https://github.com/petterobam/TensorFlow-Context&quot;&gt;https://github.com/petterobam/TensorFlow-Context&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;heading-依赖&quot;&gt;依赖&lt;/h2&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.github.petterobam&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;tensor-flow-context&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-定义计算模型&quot;&gt;定义计算模型&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;：计算模型定义需要在&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Spring&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;扫包范围&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Data&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EnableTensorFlow&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TfGetExampleContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/**
     * 本地方法
     */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@TensorFlowGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;origin1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;origin2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@TensorFlowGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;first&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;origin2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@TensorFlowGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;sub&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;origin1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;origin2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;third&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/**
     * 静态方法
     */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@TensorFlowGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Static&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;negateExact&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paramTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;third&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@TensorFlowGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;second&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;forth&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;five&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/**
     * Spring Bean 的方法
     */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@TensorFlowGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Spring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TfGetExampleService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;calculate1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;third&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;six&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@TensorFlowGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Spring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;springName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;tfGetExampleService&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;calculate2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;third&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seven&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/**
     * 自身入参
     */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@TensorFlowGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Spring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;springName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;tfGetExampleService&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;fetchOrigins&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;this&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;originDatas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TfGetExampleService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calculate1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calculate2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetchOrigins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TfGetExampleContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;origin1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOrigin1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;origin2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOrigin2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-如何使用&quot;&gt;如何使用？&lt;/h2&gt;

&lt;p&gt;示例： &lt;a href=&quot;http://127.0.0.1:7600/test/tf/context?origin1=87&amp;amp;origin2=23&quot;&gt;http://127.0.0.1:7600/test/tf/context?origin1=87&amp;amp;origin2=23&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/test/tf/context&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testTfContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InstantiationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IllegalAccessException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TfGetExampleContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TensorFlowUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fetchTensorFlowContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TfGetExampleContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOrigin1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;origin1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOrigin2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;origin2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;five&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;first&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFirst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;second&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSecond&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;third&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getThird&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;seven&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSeven&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fourth&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getForth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;six&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;originDatas&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOriginDatas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;TfGetExampleContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TensorFlowUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fetchTensorFlowContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TfGetExampleContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOrigin2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;origin1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOrigin1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;origin2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;five&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;first&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFirst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;second&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSecond&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;third&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getThird&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;seven&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSeven&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fourth&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getForth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;six&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;originDatas&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOriginDatas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TensorFlowGet for Context finish！&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-计算结果&quot;&gt;计算结果&lt;/h2&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;data2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;six&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;262144&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;third&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;originDatas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;origin2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;origin1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;87&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;seven&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;192&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;fourth&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;five&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;69&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;first&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;110&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;second&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;133&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;data1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;six&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-262144&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;third&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;originDatas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;origin2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;87&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;origin1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;seven&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-192&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;fourth&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;five&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;261&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;first&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;110&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;second&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;197&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;示例 - data1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12344870473/0ce2/f2f5/b735/f8dd5fc599aa91b5f09e5214e69caa43.png&quot; alt=&quot;示例1&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;示例 - data2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12344879560/dbbd/8aa9/764d/62baa856e7df65bddad0b9425ecdb39b.png&quot; alt=&quot;示例2&quot; /&gt;&lt;/p&gt;</content><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><category term="TensorFlow" /><category term="图计算" /><category term="复杂业务上下文" /><summary type="html">名为【仿TensorFlow懒执行编程和注解自编排】，在我的个人代办里面。 依稀记得是很久前学习 TensorFlow 的一个想法，年尾翻到，简要 finish 一下这个 idea，属于一种临时简要的探索实践。</summary></entry><entry><title type="html">【专题】应用计数案例归纳和总结</title><link href="/blog/2021/12/20/some-app-scene-count/" rel="alternate" type="text/html" title="【专题】应用计数案例归纳和总结" /><published>2021-12-20T00:00:00+00:00</published><updated>2021-12-20T00:00:00+00:00</updated><id>/blog/2021/12/20/some-app-scene-count</id><content type="html" xml:base="/blog/2021/12/20/some-app-scene-count/">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;这是一次公司内的分享，个人感觉普适性应该比较高，这里分享下~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-需要讨论的点&quot;&gt;需要讨论的点&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;heading-谈到计数我们会讨论什么&quot;&gt;谈到计数，我们会讨论什么？&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;高并发&lt;/li&gt;
  &lt;li&gt;实时性&lt;/li&gt;
  &lt;li&gt;准确性&lt;/li&gt;
  &lt;li&gt;真实性&lt;/li&gt;
  &lt;li&gt;一次性&lt;/li&gt;
  &lt;li&gt;有效性&lt;/li&gt;
  &lt;li&gt;复用性&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;heading-我们需要从一些点来切入&quot;&gt;我们需要从一些点来切入&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;高低并发与否&lt;/li&gt;
  &lt;li&gt;是否允许轻微误差&lt;/li&gt;
  &lt;li&gt;最小业务维度内是否可重复&lt;/li&gt;
  &lt;li&gt;是否双向计数&lt;/li&gt;
  &lt;li&gt;虚拟计数&lt;/li&gt;
  &lt;li&gt;是否一次性可消除&lt;/li&gt;
  &lt;li&gt;是否受历史累计影响&lt;/li&gt;
  &lt;li&gt;如何复用计数能力&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;heading-示例展开以点带面&quot;&gt;示例展开，以点带面&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;个人以在云音乐接触或了解过的一些计数场景，这里抛转引玉，和大家一起讨论一下。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12217016552/1970/1c89/cb21/58bfa00e0200dd218fb2ede41b9af6f3.png&quot; alt=&quot;播放数雷达图&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;heading-播放&quot;&gt;播放&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;特征：高并发、可重复、单向计数、实时级&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12171217718/20f7/9277/5fc1/27d973972604186c613847a38d7beff4.png&quot; alt=&quot;播放数雷达图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;解决方向：聚合处理、批量处理&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;不同数据层次或存储介质，流量承受能力不同。
网关 - 消息 - 缓存 - 数据库

播放本是一个可能发生高并发的事件，解决这类计数问题主要两个方向：
1、加快单元事件处理速度 ———— 拆分处理（一件事拆成多个步骤）
2、减少底层存储介质访问频率 ———— 聚合处理（多个事结果汇总）
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;云音乐内部提供了类似能力的成熟工具&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;略。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;播放日志的常规处理流程或者步骤&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;由于播放行为的可重复性和操作简单性，且具有极大的并发性，目前成熟的做法基本是：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;记录不入库，或仅日志记录（播放日志）或存入搜索索引平台（比如 ES）&lt;/li&gt;
  &lt;li&gt;计数二次分发（消息），且通过缓存层聚合，定时 hash 入库。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、搜索索引平台，是成熟的大数搜索体系。比如日志的 ELK，一些公司也会自研搜索平台。
2、消息二次分发，可以让并发在一定范围更加均匀，抚平高并发突刺；消息也可以实现一定的可靠性。
3、缓存层聚合，可以极大减少数据库访问，提升存储性能；由于缓存层可靠性不够稳定，最好实现冷备或备用缓存。
4、hash 入库，服务器（消费者）通常通过计数表均衡字段选择消费，保证单台服务器处理的计数数据落到同一个数据库。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12231503298/2a35/2bfc/f5a6/af66ee34d5f9b6ee9e72be3ea41cb779.png&quot; alt=&quot;播放日志处理流程&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;扩展：去噪&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;同一时刻，同一用户，同一视频，同一机器，产生了大量播放行为。（重复日志）
同一时间，同一用户，同一视频，不同机器，产生了大量播放行为。（反作弊）
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12199302334/5b5c/4a66/3c52/78aaa220649c3b677ab2631485a12b46.png&quot; alt=&quot;app-play-count-duplicate-deal.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;真实计数和展示计数&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;业务初期由于流量不足，为了快速增长或吸引用户，通常都会做特殊的展示计数逻辑，即 Mock 计数。
新人为了扶持流量或 Buffer 加持也可能会采用 Mock 计数来增长展示计数。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;一般 Mock 计数有如下类似的模式：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;展示计数给个随机初始计数，或算法定时计算随机给予展示计数一个增量扶持计数&lt;/li&gt;
  &lt;li&gt;增量展示计数=增量真实计数 * 因子&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;不言而喻，【增量展示计数=增量真实计数 * 因子】更自然，因此很多文章做在因子上：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;因子=随机可选值&lt;/li&gt;
  &lt;li&gt;因子=fn(时间变量)&lt;/li&gt;
  &lt;li&gt;因子=fn(真实计数总量，时间变量)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;由于，【增量真实计数】在固定时间窗内总数有不确定性，因此有一定的自然度，所以以上策略基本没有太大差异。&lt;/p&gt;

&lt;p&gt;PS：不过随着时间的增长，因子的作用会越来越小，其实可以使用对数函数，让因子结果显得更自然。&lt;/p&gt;

&lt;h3 id=&quot;heading-点赞收藏数&quot;&gt;点赞、收藏数&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;特征：实时级、双向计数、不可重复、允许轻微误差&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12183084548/7964/b354/5f25/ab34d022bf5d6cee9290e29ee2eb536d.png&quot; alt=&quot;点赞收藏数雷达图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;用户行为的触发难度决定表现模式&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、某种用户行为触发越简单，其越容易发生，产生的流量越大，同样并发级也越高
2、某种用户行为可重复性越高，实现难度越低，越有可能产生大流量，同样并发级也越高
3、某种用户行为产生的利益越高，越有可能被作弊，越有可能产生大流量，同样并发级也越高
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12182515918/0d92/6fcd/c6f3/3a31cc07a12abbc67dcd155471c32332.png&quot; alt=&quot;用户行为触发难度-并发级&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;用户维度通用计数存储结构&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12183563480/72aa/3ee4/f12c/979af5e30002bea50eda3a3723fbaba9.png&quot; alt=&quot;用户维度行为记录通用存储&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12183563481/2f34/f4da/8ff7/9d44118ef7e423c34b7e71158b0ad6f3.png&quot; alt=&quot;用户维度行为计数通用存储&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;用户互动行为通用计数能力复用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12183946784/5f61/7563/a509/97eb9f8856173c781983180484f977ca.png&quot; alt=&quot;用户互动行为通用能力复用&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、存储结构复用
2、Dao层逻辑复用（动态表）
3、消息逻辑复用（动态消息）
4、前后流程控制复用（入参控制）
    1）同时记录和计数
    2）先记录，异步计数
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;目前复用此能力的服务有：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;SDK 方向（本地化）： 用户行为关系业务领域服务SDK&lt;/li&gt;
  &lt;li&gt;API/RPC 方向（服务化）： 互动中台接入文档&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;heading-评论数&quot;&gt;评论数&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;特征：即时级、可重复、不允许误差、双向计数&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12171219513/f235/ce52/22fa/7a6f6e3fbfe6e42bdeb0e034dfecf948.png&quot; alt=&quot;评论数雷达图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;评论不仅是一种交互行为，还是一种资源&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;评论虽然是作为一种附属资源，但却拥有很多资源自身的独立业务。&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;除了普通的计数，还有其他相关业务计数。&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;由于评论是一种计数，所见即所得，评论数对应会展示对应数量的评论。&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;由于评论还带状态，我们初略分为：所有人可见、仅自见可见&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;故，某资源评论数&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;所有人可见评论数&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;仅自见可见评论数&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;评论计数表结构：略&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;heading-分享数&quot;&gt;分享数&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;特征：实时级一般、可重复、允许误差、单向计数&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12171218629/4133/7554/7a90/111a59d6ee8318dcad323813785d8624.png&quot; alt=&quot;分享数雷达图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;普通却不可少，有潜力却没机会&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;分享是产品借助流量传播的重要渠道，是所有互动里面必不可少的环节。
-----------------------------------------------
我们来看下分享这个交互的表面优势：
1、人人都爱分享，这个在社交里面是刚需
2、分享可以新增流量引入，增加曝光，造成更多的分享
3、分享可以重复，重复可以造成更多的流量，站内、微信、微博...
-----------------------------------------------
但是，分享没有优势基因：
1、分享是跨 APP 的，难以打破这种断层般体验感
2、分享比较隐私，操作会打断体验，触发成本比较高
3、分享不能做为激励指标，由于是跨 APP 操作，很难确定有效性
    PS：如果作为激励指标，由于它的重复性和跨APP操作，无法感知作弊，很容易被刷。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;heading-我的作品数&quot;&gt;我的作品数&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;特征：即时级、双向计数、不允许误差、多状态&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12171220115/9a97/94a5/5bd4/43243e7967b5dff197694f876746ac37.png&quot; alt=&quot;作品数雷达图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;贯穿整个产品的生命周期&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;作品数记录着作品的生命周期指标，影响它变化的因素非常多样：
1、从作品发布后经历 反垃圾、人工审核 到确定可见性后
2、后续还会碰到用户主动删除
3、用户主动修改可见性
4、政策或突发事件导致重新审核导致下架
5、其他影响作品状态的因素

内容为王的当前，创作者体验是产品出位的重点：
1、作品数对于创作者是一种敏感性数据，如果出现误差会引起负反馈。
2、作品数对于客态访问者，如果出现不一致会引起产品信任危机。
3、作品数对于统计数据，如果作为激励或指标排名，会引起客诉。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;云音乐产品的优势&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;云音乐相比于微信或微博，能够做出层次更加丰富的社交体验。
想要做出更丰富的社交体验，则需要做出更多层次的隐私权限。

Mlog 产品计数层次
1、NomalStatusCount（所有人可见）
2、OnlySelfSeeCount（仅自见，反垃圾导致）
3、UserDeleteCount（自己删除）

动态产品的计数层次
1、所有人可见
2、好友可见
3、仅粉丝可见
4、仅圈子可见
3、仅自见可见
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;多层次的隐私权限结构设计&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12197038223/82f7/6204/a806/369a0b990bc2e0704c76ed29e9374cc9.png&quot; alt=&quot;作品计数表通用结构设计&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;heading-话题参与人数&quot;&gt;话题参与人数&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;特征：实时性低、单向计数、允许误差&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12171218632/1eaf/6d53/964b/84768410c8ea8e4a8be41f33df5693e8.png&quot; alt=&quot;话题参与人数雷达图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;同样是作品产生的计数，却地位不同&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;某用户在某个话题下发布了作品，则认为该用户参与了此话题。
同样是作品发布产生的计数，其准确性、实时性却并不显得和作品数这般重要。
1、参与人数是单向计数，只能单向积累，作品状态变化不会影响计数。
2、话题参与人数并不是一个敏感指标，关注的用户不多。
3、话题参与人数只是一个参考数据，不能关键性影响话题本身的热度。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;heading-消息数红点计数&quot;&gt;消息数、红点计数&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;特征：即时级、一次性、单向计数&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12171219517/a54a/1fc1/f875/779bec6221ef8afa0ab67493b45d9182.png&quot; alt=&quot;消息&amp;amp;红点计数雷达图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;一次性特征的计数业务&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;红点或数字气泡或者特殊引导属于一次性计数业务。
目标：引流、引导业务
特征：只要用户曝光过，就清零。
-----------------------------------------
计数仅单纯累加模式，清除用拉模式直接归零。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;消息私信数（半一次性）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12198923227/ab6b/7219/d2c7/00545536041beb02c39ca22d699bcabb.png&quot; alt=&quot;私信业务计数流程&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;、&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;One&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;One&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;的私信计数主表（一次性特征）&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;略&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;、用户私信总计数表（普通双向计数表，用户维度低并发）&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;略&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;动态红点计数（一次性）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;用户维度的持久化缓存（redis）—— event_redis_count_key
1、业务 1： 动态流推荐数据，单纯累加 event_redis_count_key 缓存计数
2、业务 2： 共鸣匹配推荐数据，单纯累加 event_redis_count_key 缓存计数
3、业务 3： 音乐人新歌提醒，单纯累加 event_redis_count_key 缓存计数
4、业务 n： xxx，单纯累加 event_redis_count_key 缓存计数
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12199166851/fc90/0fdc/e5aa/6f43e3e0032fc8b6737f6e04754b0b77.png&quot; alt=&quot;动态红点计数流程&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;heading-热榜点击数&quot;&gt;热榜点击数&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;特征：实时级、高并发、单向计数、实时排序&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p5.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12171220113/9f1e/ec13/2a4e/c2b68753555f5098f59ed4937f85e61c.png&quot; alt=&quot;热榜点击数雷达图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;时间窗口区计数缓存&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;热度计数最重要的就是规避历史高热度的累积资源，涉及到计数更新的问题
1、如何淘汰现在已经不热了的历史热度资源（范围计数 -&amp;gt; 时间窗口计数）
2、如何做到快速排序（维护时间窗口计数排序列表）
3、如何做到时间窗计数的连贯性（分片粒度+分段窗口）
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12222336930/85c5/c694/1c17/0fdb01b1cb90713139f580010f5b17a4.png&quot; alt=&quot;时间窗计数流程&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;异化计数： 话题热度&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;若将话题点击数改成话题热度，那么只需要一个增量的公式。
将点击数累积转化成热度值累积，则变成实时话题热度排行榜的需求。
而上述就是一种异化计数。
热度公式可以类似于： hotScore = clickCount * (100 / totalCount) + x
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;heading-听歌记录数&quot;&gt;听歌记录数&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;高并发、实时性低、可重复、允许误差&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12217037530/c599/962f/3764/79c926db7da565968c0196cef7701172.png&quot; alt=&quot;听歌总时长雷达图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;BI 处理或缓存延迟处理&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;时间和准确性要求低的情况，基本可以延迟甚至离线处理。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/12217858178/fbf6/6395/0795/09f73099958ed1e6f14d4f7201199977.png&quot; alt=&quot;用户听歌排行计数流程&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;heading-思考&quot;&gt;思考&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;思考与应用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这里有几个现想的需求，大家可以思考下，可以看下他们分别归属于哪一类：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;动态需要开发专题，专题有订阅的功能，订阅这块的计数如何设计？&lt;/li&gt;
  &lt;li&gt;云圈广场需要在云圈龙珠上展示每个圈子圈内所有未读的消息数，这块需要如何设计？&lt;/li&gt;
  &lt;li&gt;云音乐要开发听歌沉浸时间的需求，需要统计听歌时长，并且出用户维度月报、周报听歌时长分析报告，如何设计？&lt;/li&gt;
  &lt;li&gt;云音乐需要开发实时活跃歌曲在线听榜单，如何设计？&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;heading-结语&quot;&gt;结语&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;什么是计数？

计数一般是针对资源附加属性，而资源涉及到方方面面，
它可以是用户产生的内容（我的作品数），
也可以是内容的附加描述（视频的播放数、点赞数），
也可以是一种产品描述（我的听歌总数），
甚至可以是一种异化的计数（我的听歌时长），
抑或是描述资源间的关系指标（我的好友数、关注我的人数）

我们发现，应用内的一切对象或元素（meta）都可以成为一种资源。
PS：用户是不是一种资源？ ———— 是的，用户也是一种资源，是一种特殊的资源。

这里，我们将计数异化定义下：一切累积效应的数字，可以认为是某种资源的计数。
它承担着重要的故事讲述能力。
首先，它显而易见的向用户传达，这个数字不是一蹴而就的，是慢慢积累的。
其次，它告诉用户：
  你这个人火不火，看你的粉丝数。
  你这个作品好不好，看你的播放数、点赞数。
  你这个产品优不优秀，看用户总数、使用时长、总活跃度。
  你这个应用热不热，看下载数、讨论热度。

我们做一个功能模块或产品内容，若给用户传达的累积量化指标很少。
用户不会理解这个产品的故事，他们就不会用时间去买单。

我们可以认为，计数是荣誉、成就感、归属感、标杆、方向、品牌图腾。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;用户心智&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;当用户开始关注这些数据，被这些数据引导行为，并开始为这些数据买单时；随之而来的就是用户心智。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><category term="计数" /><category term="高并发" /><category term="通用性" /><summary type="html">这是一次公司内的分享，个人感觉普适性应该比较高，这里分享下~</summary></entry><entry><title type="html">【专利】视频流消费区块超链分析与应用</title><link href="/blog/2021/05/24/patent/" rel="alternate" type="text/html" title="【专利】视频流消费区块超链分析与应用" /><published>2021-05-24T00:00:00+00:00</published><updated>2021-05-24T00:00:00+00:00</updated><id>/blog/2021/05/24/patent</id><content type="html" xml:base="/blog/2021/05/24/patent/">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;前一段时间，个人无聊，依据自己正在做的领域想到了一个专利。
近期，专利已经提交，被专利局正式受理了。
所以，近期就把这块挂到个人博客上记录下。
（PS：同法务人员确认，现在可以写专利相关的博客）
考虑到专利原件由于被 “专业人员” 咬文嚼字到我读起来有点费脑的前提下；
我还是直接拿出我的专利交底书吧，至少上面是原汁原味的想法。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs%E5%8F%91%E6%98%8E%E4%B8%93%E5%88%A9%E4%BA%A4%E5%BA%95%E4%B9%A6%EF%BC%9A%E8%A7%86%E9%A2%91%E6%B5%81%E6%B6%88%E8%B4%B9%E5%8C%BA%E5%9D%97%E8%B6%85%E9%93%BE%E5%88%86%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8V2.png&quot; alt=&quot;发明专利交底书：视频流消费区块超链分析与应用V2&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;很多想法只是一闪而逝，当时有这个想法时恰好了解到公司在收集专利想法，于是两相成就。
虽说这个专利是凭空想出来的，但是当它呈现在眼前的时候还是很开心。
而且，想法是可以随时的、随地的产生；如果我愿意的话，我觉得这个不是难事，毕竟程序员想做的事太多了。
这一点，对于个人或者公司都是有益的：个人可以得到相应激励费用和荣誉，公司或许是知识产权或者其他。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;专利链接： http://www.soopat.com/Patent/202110791792&lt;/p&gt;</content><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><category term="专利" /><category term="视频流" /><category term="区块链" /><summary type="html">前一段时间，个人无聊，依据自己正在做的领域想到了一个专利。 近期，专利已经提交，被专利局正式受理了。 所以，近期就把这块挂到个人博客上记录下。 （PS：同法务人员确认，现在可以写专利相关的博客） 考虑到专利原件由于被 “专业人员” 咬文嚼字到我读起来有点费脑的前提下； 我还是直接拿出我的专利交底书吧，至少上面是原汁原味的想法。</summary></entry><entry><title type="html">【领域】视频 UGC 领域思考和归纳</title><link href="/blog/2021/01/01/video-ddd-think/" rel="alternate" type="text/html" title="【领域】视频 UGC 领域思考和归纳" /><published>2021-01-01T00:00:00+00:00</published><updated>2021-01-01T00:00:00+00:00</updated><id>/blog/2021/01/01/video-ddd-think</id><content type="html" xml:base="/blog/2021/01/01/video-ddd-think/">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;工欲善其事，必先利其器。
为了更合理高效的迭代产品，自认为需要全面深入的认知所负责领域。
以下是阶段性的思考，会持续更新和丰富。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;heading-领域角色&quot;&gt;领域角色&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;内容消费用户（普通/会员）&lt;/li&gt;
  &lt;li&gt;内容创作用户（创作者）&lt;/li&gt;
  &lt;li&gt;内容治理用户（运营/开发者/产品策划）&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;各角色关系领域简图（初版） ↓&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs/video-ugc-ddd-v3.png&quot; alt=&quot;video-ugc-ddd-v3&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;heading-内容消费用户行为领域&quot;&gt;内容消费用户行为领域&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;内容消费用户特征&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;用户离散（种类繁多）&lt;/li&gt;
  &lt;li&gt;粘性相对小（其他角色有工作性质）&lt;/li&gt;
  &lt;li&gt;占比极高（相较其他角色）&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;内容消费用户基础行为&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;打开（用户粘性）&lt;/li&gt;
  &lt;li&gt;浏览（用户粘性）&lt;/li&gt;
  &lt;li&gt;播放（用户粘性+）&lt;/li&gt;
  &lt;li&gt;滑动浏览/播放（用户粘性++）&lt;/li&gt;
  &lt;li&gt;搜索（用户粘性+++）&lt;/li&gt;
  &lt;li&gt;关闭（用户粘性-）&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、基础行为是体验的基石，界面要避免复杂化。
2、基础行为模式不要频繁变化，促进用户养成习惯粘性。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;内容消费用户交互行为（二次生产）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;点赞（偏好）&lt;/li&gt;
  &lt;li&gt;评论（偏好+/二次创作）&lt;/li&gt;
  &lt;li&gt;转发/分享（偏好++/二次曝光）&lt;/li&gt;
  &lt;li&gt;收藏（偏好+++）&lt;/li&gt;
  &lt;li&gt;创建/添加到资源集（二次创作）&lt;/li&gt;
  &lt;li&gt;不感兴趣（偏好-）&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、交互行为是平台生命力的体现，交互越简单、越频繁，内容越丰富。
2、交互行为能产生大量二次创作，而促进普通用户二次创作是增强社区活力的重要手段，其流量大、内容广、产量高。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;内容消费用户互动行为&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;添加好友/关注用户（互动粘性+）&lt;/li&gt;
  &lt;li&gt;@ 其他用户（互动粘性++）&lt;/li&gt;
  &lt;li&gt;评论/回复（二次生产+互动粘性++）&lt;/li&gt;
  &lt;li&gt;私信（互动粘性++）&lt;/li&gt;
  &lt;li&gt;软件其他个性互动功能（个性化+/产品营销++）&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、互动行为是用户增长的重要渠道，好的互动能极大加深产品和用户的羁绊。
2、互动记录是很重要的情节纽带信息，最好要能让用户密切回溯和关注。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-内容创作用户行为领域&quot;&gt;内容创作用户行为领域&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;创作用户分类和意图分析&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;普通用户生产内容（分享/交流/认同诉求）–&amp;gt; 离散生产/优质占比低/体量大&lt;/li&gt;
  &lt;li&gt;专业用户生产内容（流量/扩大影响力/品牌塑造/收益）–&amp;gt; 优质生产/品类明确&lt;/li&gt;
  &lt;li&gt;职业用户生产内容（收益/职业扩展）–&amp;gt; 优质占比高/生产频率保证&lt;/li&gt;
  &lt;li&gt;MCN 机构用户生产内容（网红孵化/流量/收益）–&amp;gt; 量产/自主营销引流/质量保障&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、相信所有用户都有创作能力，开放创作入口和简化创作步骤，引导产生更多有效内容（初期加大力度）。
2、重视和运营优质创作者，提高社区内容质量，走可持续发展（前中后期）。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;创作用户和角色例举&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;普通用户：游客、账号用户、VIP 用户&lt;/li&gt;
  &lt;li&gt;专业用户：名人、大 V、音乐人&lt;/li&gt;
  &lt;li&gt;职业用户：Up 主、达人、专栏作家&lt;/li&gt;
  &lt;li&gt;机构用户：机构下的子用户、机构下的网红&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;专业/职业/机构等内容创作用户特征&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;占比小（相较消费用户）&lt;/li&gt;
  &lt;li&gt;目标性强（定向输出）&lt;/li&gt;
  &lt;li&gt;与平台存在利益关系&lt;/li&gt;
  &lt;li&gt;主动（发布作品）+ 被动（点赞/评论/私信 互动）粘性&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;职业内容创作用户基础行为&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;入驻（重要渠道，可调整门槛）&lt;/li&gt;
  &lt;li&gt;发布作品（生产创作核心）&lt;/li&gt;
  &lt;li&gt;修改作品（弱操作）&lt;/li&gt;
  &lt;li&gt;删除作品（弱操作）&lt;/li&gt;
  &lt;li&gt;查看作品数据（播放/赞/评论/分享/收藏，强操作）&lt;/li&gt;
  &lt;li&gt;查看收益（重要数据）&lt;/li&gt;
  &lt;li&gt;提现（重要体验）&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;heading-内容治理用户行为领域&quot;&gt;内容治理用户行为领域&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;内容治理用户泛化&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;运营（数据治理）&lt;/li&gt;
  &lt;li&gt;开发（功能/性能治理）&lt;/li&gt;
  &lt;li&gt;策划（体验治理）&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、内容治理用户不仅仅是运营，还有隐藏在后方的开发和产品。
2、内容治理不仅仅是数据治理，还有数据相关的页面交互和性能稳定。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;内容治理范畴&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;内容数据治理（机审、人审、打标签、规则匹配、聚合产出、数据分析等）&lt;/li&gt;
  &lt;li&gt;内容交互治理（展示样式、投放控制、生产引导、曝光入口、互动流程、行为埋点分析等）&lt;/li&gt;
  &lt;li&gt;内容性能治理（T+1 -&amp;gt; 即时、搜索索引、增量聚合、容灾兜底、静态化、降级、限流等）&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、内容治理基本涉及一个 APP 的所有功能或相关扩展点，它是一个综合管理范畴。
2、初期的内容治理功能弱且仅考虑给运营用，然所有开发和交互相关的范式都可以扩展到内容治理，供所有治理角色使用。
3、扩展和丰富内容治理功能是后期提高生产力的一个重要发力点。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-角色行为流程简图初版&quot;&gt;角色行为流程简图（初版）&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs/video-ugc-ddd-role-v0.png&quot; alt=&quot;video-ugc-ddd-role-v0&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;heading-领域数据&quot;&gt;领域数据&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;用户数据（用户）&lt;/li&gt;
  &lt;li&gt;资源数据（资源、资源-用户、资源-资源）&lt;/li&gt;
  &lt;li&gt;交互数据（资源-用户-行为）&lt;/li&gt;
  &lt;li&gt;互动数据（用户-资源-用户、用户-功能-用户）&lt;/li&gt;
  &lt;li&gt;治理数据（资源-标签-规则-场景，资源-资源）&lt;/li&gt;
  &lt;li&gt;分析数据（策略分析-算法推荐、统计分析-报表排行、行为分析-产品决策）&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、一个领域内数据主题就是对应的领域资源和用户。
2、资源和用户通过一系列行为和关系形成各种组合数据。
3、资源数据、交互数据和互动数据存在笛卡尔积的组合，是数据爆发式增长的核心，也是社区增长的主要重心。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-资源数据&quot;&gt;资源数据&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;资源数据是用户使用产品自主创作的内容。
1、资源数据是内容的核心。
2、资源与资源的关系是网站流聚合内容的主体。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;用户视频领域主资源数据结构&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;主资源由于其在产品领域上可能会有不同表现形式或历史原因，需要区分设计，故也可能有完全不同的数据结构和流转模式。
为了在视频领域上可以灵活扩展，甚至在迭代上互不影响，需要定义类型，能够有效做到业务隔离和数据聚合。
比如视频可能有：
    1、用户产出视频（VLog）
    2、歌曲 MV（包含付费）
    3、知识付费课程（专题视频）
    4、演唱直播等 Live 录制视频（包含付费）
    5、外部渠道同步视频
    6、...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs/user-resource-data-v0.png&quot; alt=&quot;user-resource-data-v0&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;用户视频领域主资源相关资源关系数据结构&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;主资源相关资源在产品方向是一个很好的维度聚合页，其二次生产可以产生大量优质内容。
聚合页依赖于维度，把每种维度即为一种相关资源，例如：
    1、歌曲相关视频(歌曲)
    1、歌手相关视频(艺人)
    1、达人相关视频(用户)
    2、主题相关视频(主题)
    3、位置相关视频(位置)
    4、频道相关视频(频道)
    6、热度相关视频(播放/点赞/收藏/评论)
    7、...
发布行为、交互行为、数据分析、算法分析等产生的维度数据
统一可以定义为主资源的相关资源，相关资源=维度数据+维度类型=唯一的聚合资源
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs/resource-relation-data.png&quot; alt=&quot;resource-relation-data&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;用户视频动态数据流数据结构（泛资源数据结构）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;泛资源本身并无丰富的业务，其虽有通用的业务模式，但是核心业务是主体信息，而主体信息是其所关联的资源。
任何一个独立产品基本都有这种泛资源，其表现上就是评论、动态、私信等等。
以云音乐为例：
    主体信息是音乐，则出现《歌单》、《排行榜》等等；
    主体信息是声音，则出现《播客》；
    主体信息是演唱，则出现《K歌》
    主体信息是直播，则出现《LOOk直播》；
    主体信息是视频则出现《云村》；
    ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs/generics-resource-data.png&quot; alt=&quot;generics-resource-data&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;heading-交互数据&quot;&gt;交互数据&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;交互数据是用户和资源互动产生的数据。
1、交互数据核心在用户，用户操作才会产生。
2、交互数据扩展点在行为，行为设计要旨在降低行动成本，促进用户习惯养成。
3、交互数据重心在资源，资源的质量或热度决定了交互数据的增长和总量。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;用户交互行为关系统一数据结构设计&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;用户交互关系数据记录主要把握三点：
    1、重要维度保证：用户、资源、交互
    2、重要维度扩展：用户（唯一ID|ID+类型）、资源（唯一聚合ID|ID+类型）、交互（类型）
    3、重要维度描述：【用户】-【行为】-【资源】-【发生时间】
当然，由于 UGC 的体量极容易膨胀，在维度侧可以做适当分表，同时保证该维度细分业务数据隔离，比如：
    交互类型作为分表名变量：{Prefix}_{Business}_{Action}_Relation
    资源类型作为分表变量：{Prefix}_{Business}_{ResourceTypeName}_Action_Relation
以下用交互类型分表为例，做通用交互关系数据设计。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs/user-action-relation-data-v2.png&quot; alt=&quot;user-action-relation-data-v2&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;用户交互行为关系计数灵活数据结构设计&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;计数我们可以理解为一种数据统计，在关系数据库可以简单理解为对记录数的 COUNT(*)
对于 UGC 场景，数据体量巨大且伴随高频访问，实现上不允许实时 COUNT，要求我们要对这种统计做存储————计数表。
由于 COUNT(*) 在数据分析里面是一种聚合行为，其存储结构=聚合Key+COUNT(*)
一般情况，聚合Key=维度的组合：
    1、用户交互行为关系计数对应聚合Key=用户+交互行为
    2、资源交互行为关系计数对应聚合Key=资源+交互行为
通常我们在设计表的时候会把交互行为设计成表中的字段，故一个用户交互核心计数表一般如下：
    +-------+-----+--------+--------+------+
    |userId |like |collect |comment |share |
    +-------+-----+--------+--------+------+
    |10010  |400  |20      |50      |10    |
    +-------+-----+--------+--------+------+
当我们想添加新的交互，比如一键三连、观看心情、投币等等。
需要在表上添加新字段，这对于大表是不够友好的，也会造成物理存储上不连续。
同时当我们对表记录计数进行修改，记录维度集中情况容易锁行，影响写性能。
因此，为了便于扩展和保持性能，计数表可以通过维度数据冗余，将一行多个交互计数转成多行交互计数 ↓
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs/user-action-relation-count-data-v2.png&quot; alt=&quot;user-action-relation-count-data-v2&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;同理，资源维度聚合计数灵活数据结构设计&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/petterobam/picture-bucket@main/vs-code/upload/imgs/resource-action-relation-count-data-v0.png&quot; alt=&quot;resource-action-relation-count-data-v0&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;综上，要达到便于扩展和可插拔，采用组合维度计数 ↑&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;(actionType) 可以随意&lt;strong&gt;新增&lt;/strong&gt;用户行为业务，而不用一开始就定义最全的各种行为计数列&lt;/li&gt;
  &lt;li&gt;(resourceType) 可以随意&lt;strong&gt;废弃&lt;/strong&gt;或&lt;strong&gt;新增&lt;/strong&gt;某种资源而不影响原先数据层的计数数据和逻辑&lt;/li&gt;
  &lt;li&gt;用户维度计数行转列，分散了计数记录，降低记录热点 SQL 概率&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;heading-互动数据&quot;&gt;互动数据&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;互动数据是用户之间互动产生的数据。
1. 互动数据的核心在承载互动关系的产品/功能/活动，表现形式在用户之间。
2. 互动数据的扩展点在互动事件，互动事件可以大到一个产品、小到一个具体功能或某个活动。
3. 互动数据天然具有可重复性，互动的频率决定用户的粘性，是增长用户渗透率的核心方向。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;【扩散】：评论作为通用交互信息，作用用户与资源，也可以直接作用用户之间，对 UGC 内容起主动扩散作用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;评论是一种泛资源，不同资源依托与它而拥有评论功能。
对资源进行评论，这是资源的常用交互，并不能算是真正的互动。
对于评论的回复，可以直接关系到两个用户之间，我们定义为一次互动。
社区的活跃度除了体现在交互频次（UV），还应体现在互动的频次。
互动频次越高，社区活力越大，社区潜能越大，社区发展越健康。

回复这种行为在评论术语里面定义为：盖楼。
盖楼行为可以在用户与用户之间反复的叠加，成功将 用户-内容（资源）-用户 联系到一起，从而放大内容的影响。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;【联系】：私信作为一般产品都有的互动，是用户对用户更加直接的联系。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;私信也是一种泛资源，不同角色互动对应不同内容（资源）。
私信由于作用在两个用户之间，内容不公开，无法扩散。
    1、官方-用户：活动和推广私信，类似于公告、周知。
    2、创作者/大V/好友-用户：创作者作品推送、大V动态推送、好友动态推送。
    3、用户-运营：用户主动的问题反馈，这里对应的内容可能就是产品本身功能或资源内容的疑问和反馈等。
    4、...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;【热点】：活动作为官方发起的事件，具有最好、最丰富的流量支援，很容易创造站点内的热点内容。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;活动是一种最为灵活的泛资源，具有很强的时效性。
在时间限制、流量加持和金钱成本的笼罩下，出场自带光环，很容易调动用户积极性。
UGC 活动一般有如下方向：
    1、激励创作（竞争排名奖励类活动、日更奖励活动）————伴随金钱成本
    2、用户行为习惯养成（新功能衍生出的挑战类活动）————伴随等级和积分、金钱成本
    3、打造产品特色（日常特色活动）————伴随排名榜单、金钱成本
    4、保证社区活力-UV ↑（论坛活动、线下活动）————伴随较大运营成本和金钱成本
    5、...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-治理数据&quot;&gt;治理数据&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;治理数据是运营在资源管理行为下产生的数据。
治理数据核心在资源数据的分类，表现在资源数据的良性竞争————优胜劣汰。
治理数据的扩展点在效能提升和控制提升，包括分类效率、策略适应、安全把控等。
治理的目标是实现 UGC 生态最大化良性运作，让好的内容更快扩散，让坏的内容无法传播。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;【标记】：打标是常见运营行为，通过对资源标记特征词、特征位、特征状态，达到资源分类的效果。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;标记数据最易实现的则是特征位和状态位数据，因为他们含义明确。
最可以进行挖掘的就是特征词类文本数据，一般分为机器打标和人工打标。
文本识别、图片、音频和视频等多媒体内容识别技术可以初步通过机器审核，进行标记。
人工是最后一道防火墙，并且人工能有更多人性化的标记，所以说每个打标运营都是一个鉴美师。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;【筛选】：筛选也是常见的运营行为，一般是通过创建固定规则（高级查询语句），选出符合条件的资源。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;筛选出来的结果在运营术语中称之为资源池，常见 UGC 有如下资源池：
    1、推荐池
    2、精品池
    3、特色池
    4、...
这些池子数据产出后，需要通过分发渠道实时或延时到 C 端投放。
而据我所知，一个熟练的运营的痛点应该就是有时不能马上让自己的筛选结果生效，因为她们总问————什么时候生效。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;【控制】：控制主要是对 C 端效果的直接干预，并可以实现即时生效。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;控制主要通过强推和屏蔽即时干预 C 端页面：
    1、强推：立即曝光优异内容、新功能、广告等
    2、屏蔽：马上淘汰劣质资源、负反馈功能、业务风控等
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-分析数据&quot;&gt;分析数据&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;分析数据：不同的角色通过已有的各类数据，进行不同目的的数据挖掘后产出的具有实际有意义的数据。
这些数据常规可以被划分为：统计数据、决策数据和算法数据。
分析数据在实际应用迭代过程中起着立竿见影的效果，往往随着其应用规模的量级化起着爆发性效果。
而这些优质的分析数据决定着应用的迭代方向、内容的良性淘汰和扩散效能，以及长期发展的步调。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;【统计】：统计数据属于一种静态数据分析，数仓工程师通过固定规则组合各种数据挖掘操作，生成不同维度数据报表。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;数仓工程师通过 SQL、Hive  或Scala 等脚本对数据进行处理，主要数据挖掘手段（OLAP）：
    1、切片&amp;amp;切块：维度细化（Select A,B &amp;amp; Group A,B）和 维度组合（Select A,B &amp;amp; Group A,B,C）
    2、旋转：行转列或列转行
    3、上卷：聚合操作（Group、Partition、Sum、Count、Max、Min、Avg等）
    4、下钻：维度拆分（笛卡尔、Join、Union）
    5、其他：公式计算（开根号、平方差、对数等）、文本解析（字符转换、Json解析、Xml解析等）、取反向等等

数据集市与数仓：
    1、数据集市：处理好的数据进行各种业务和领域范围分类，让其他相关内容治理角色随取随用。
    2、数仓：数据集市的总和。

数仓的发展：
    1、目标是自动化。数据被处理成所有可用维度，可以轻松获取和加工。
    2、极限是实时变化。既通过时序数据库等垂直数据手段可以实时纠正细小数据变更影响的统计数据变更。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;【决策】：决策数据是对统计数据的一个专业化的趋势预测，主要是策划和运营通过数据决策产品迭代方向和营销方向。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;用于决策的数据很多，其中比较重要的数据：
    用户行为日志：策划、运营和算法常用的决策数据，识别用户习惯和规划出好的功能让应用用户更愿意花时间使用。
        不同 APP 界面结构不一样、目标用户不一样，会形成决然不同的 UA 日志。
    内容和交互统计数据：是运营常用的决策数据，识别和营造相应的环境引导有助于促进好的内容产生。
        视频而言，重要的数据总是播放量、点赞量、评论分享量以及发布量等等。
    相关资源数据：在早期丰富产品功能和提高曝光重要决策数据，通过提高覆盖率来增加曝光率。
        目前各大知名 APP 都在涌入视频市场，不同产品的早期的创造者视频相关资源侧重点不同，比如：
            云音乐更关注歌曲覆盖率
            微博更关注热搜词覆盖率
            知乎更关注话题贴覆盖率
            淘宝更关注商品覆盖率
            快手更关注乡土风俗覆盖率
            抖音更关注社会热点覆盖率
            B站更关注优质动漫覆盖率
            ...（以上部分或许）

决策后的趋势预测一般需要通过数据在时间窗为维度的统计数据，这也决定数据的统计有一定粒度的时间维度（一般按天生成统计数据）。
    趋势曲线如果有很多尖锐波动的折线，决策上需要让折线朝良性方向波动。
    趋势曲线如果起点低且非常平缓甚至下滑，需要通过一剂猛药，来改变场景下的一潭死水或者砍到该场景。
    趋势曲线如果起点高且非常平缓，需要通过其他维度数据提升（如用户量或优质视频总量）来带动提升。
    总之，让有限的时间和开发资源，尽可能提升视频维度数据的体量，使得站内环境下达到一个良性饱和的状态。

决策需要有一定的合理性。比如：
    日活只有 10W 的应用，让它实现 1 亿的日播放量目标，这样的要求无异于败而求战。
    因为，一个人如果每天看 1000 个视频，每天要看废 10W 个人。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;【算法】：算法数据是面向用户的一种决策数据，主要通过算法构建计算模型并使用统计数据和实时数据动态打分和排序出来的数据。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;算法数据更关注模型分计算的准确度，通过某个业务场景特性构建计算模型，比如：
    1、歌手A在本站受欢迎程度 R(x) 在公网知名度 r(x)，其拥有曲风B的歌曲C
    2、不同年龄对歌手A的访问比率 f(x)
    3、不同年龄在曲风B的每日被听完概率 s(x)
    4、视频V有歌曲C的配乐，配乐相关系数 p(v,c)
    5、计算用户U对视频V的感兴趣分计算模型：(10 * R(A) + r(A)) * f(U.age) * s(U.age) * p(V,C)
上面是一个假设的计算模型，通过每天或每小时计算所有用户对每个视频的感兴趣程度，得到一份依据某些维度数据的兴趣分值。
兴趣分值可以作为排序依据，从而形成算法推荐的依据之一。

算法的发展：
    1、目标是准确性。无限接近且预知现在用户想看什么，并达成良性循环。
    2、极限是实时性。未来不可预知，现在才是关键。实时性依赖算法实时策略和计算模型的数据质量。

曝光是一种很直接的实时策略，数据实时上报可以立马让分值变化，比如：
    1、原分值 S
    2、当前时间戳 nowTimeStamp
    3、曝光时间 seeTimeStamp
    4、当前分值：S - 1000 / (nowTimeStamp - seeTimeStamp) 或 (1 - 1000 / (nowTimeStamp - seeTimeStamp)) * S
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;参考文档：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;互联网专业名词：https://zhuanlan.zhihu.com/p/52712121&lt;/li&gt;
&lt;/ul&gt;</content><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><category term="领域" /><category term="UGC" /><summary type="html">工欲善其事，必先利其器。 为了更合理高效的迭代产品，自认为需要全面深入的认知所负责领域。 以下是阶段性的思考，会持续更新和丰富。</summary></entry><entry><title type="html">Git 源码·LinusTorvalds 第一次提交 CR 和启发</title><link href="/blog/2020/12/03/git-first-commit-code-review-and-think/" rel="alternate" type="text/html" title="Git 源码·LinusTorvalds 第一次提交 CR 和启发" /><published>2020-12-03T00:00:00+00:00</published><updated>2020-12-03T00:00:00+00:00</updated><id>/blog/2020/12/03/git-first-commit-code-review-and-think</id><content type="html" xml:base="/blog/2020/12/03/git-first-commit-code-review-and-think/">&lt;h2 id=&quot;heading-git-源码第一次提交-codereview&quot;&gt;Git 源码第一次提交 CodeReview&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Today, let's review Linus Torvalds's code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;heading-检出第一次提交&quot;&gt;检出第一次提交&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;检出源码并定位到第一次提交&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 检出 Git 源码&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/git/git.git
&lt;span class=&quot;c&quot;&gt;# 切换到第一次提交&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git log --reverse --pretty&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%H origin/master | head -1 | xargs git checkout
Previous HEAD position was 72ffeb997e Ninth batch
HEAD is now at e83c516331 Initial revision of &lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;, the information manager from hell
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;heading-一些小提示&quot;&gt;一些小提示&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;需要 CodeReview 的文件请按照如下顺序！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git ls-files
 1. cache.h
 2. init-db.c
 3. update-cache.c
 4. write-tree.c
 5. &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt;-cache.c
 6. commit-tree.c
 7. cat-file.c
 8. &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt;-tree.c
 9. show-diff.c
10. Makefile
11. README

让我们按照上面的文件顺序 Review 一下 Linus Torvalds 的 Code 吧！！

NOTE!! 一些小提示~
cache.h 【&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;】一些变量和 object&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;blob/tree/commit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 结构定义，注释很多，请多花时间理解
init-db.c 对应 git init 命令，初始化 .git（最开始是 .dircache） 文件夹内容
update-cache.c 【&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;】对应 git add 命令，将文件添加到 .git/index 和 .git/objects
write-tree.c、commit-tree.c 【&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;】对应 git commit 将文件夹关系和 changeset 添加到 .git/objects
&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt;-cache.c、read-tree.c、cat-file.c 解压 object 文件到临时文件
show-diff.c 调用系统 diff 命令，将解压的临时文件和当前文件做 diff 对比
Makefile 编译安装配置文件
README 【&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;】总结文档，作者的设计和想法
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;heading-一步步深入技巧&quot;&gt;一步步深入技巧&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;如何按照提交记录一步步 CodeReview ？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 向后检出一个提交&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git log --reverse --pretty&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%H origin/master | grep -A 1 &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git rev-parse HEAD&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; | tail -1 | xargs git checkout
Previous HEAD position was e83c516331 Initial revision of &lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;, the information manager from hell
HEAD is now at 8bc9a0c769 Add copyright notices.
&lt;span class=&quot;c&quot;&gt;# Git 日志美化&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git log --pretty&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;format:&lt;span class=&quot;s1&quot;&gt;'|%h|%ae|%an|%aI|%s'&lt;/span&gt; --numstat
|e83c516331|torvalds@ppc970.osdl.org|Linus Torvalds|2005-04-07T15:13:13-07:00|Initial revision of &lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;, the information manager from hell
40      0       Makefile
168     0       README
93      0       cache.h
23      0       cat-file.c
172     0       commit-tree.c
51      0       init-db.c
259     0       &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt;-cache.c
43      0       &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt;-tree.c
81      0       show-diff.c
248     0       update-cache.c
66      0       write-tree.c
&lt;span class=&quot;c&quot;&gt;# 该版本与前一个版本比较改动&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git diff HEAD~1
&lt;span class=&quot;c&quot;&gt;# 向前检出一个提交&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git checkout HEAD~1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;that's all. go and think!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;heading-git-第一次提交的源代码分析及带来的启示&quot;&gt;Git 第一次提交的源代码分析及带来的启示&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Git 的本质就是一系列的文件对象集合，代码文件是对象、文件目录树是对象、commit 也是对象。
文件对象的名称即内容的 SHA1 值，SHA1 哈希算法的值为 40 位。
Linus 将前 2 位作为文件夹、后 38 位作为文件名。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;heading-哈希碰撞问题&quot;&gt;哈希碰撞问题&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://security.googleblog.com/2017/02/announcing-first-sha1-collision.html&quot;&gt;哈希碰撞问题&lt;/a&gt;：2017 年 2 月 23 日，SHA1 算法已经在谷歌的帮助下碰撞成功，使用 SHA1 的 Git 怎么处理这个事情？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://stackoverflow.com/questions/9392365/how-would-git-handle-a-sha-1-collision-on-a-blob/9392525#9392525
Git 创始人 Linus Torvalds 已经在邮件列表进行了回应，大体意思是 Git 除了 hash 了数据之外，还在文件头部存储了数据长度等信息。
想要骗过 Git 除了 SHA-1 值要相同之外，数据长度也要一致才行，这大大增加了碰撞难度。
Linus 说碰撞是通过增删一些可有可无的不透明数据来实现的，所以 Git 以后需要加强对不透明数据的检查，让这些碰撞无处可藏。
PS：从 2018 和 Git 2.19 开始，代码已重构为使用 SHA-256。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;heading-三种对象构成所有&quot;&gt;三种对象构成所有&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;对象有三种类型：blob、tree、commit。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;blob：文件内容 zlib 后的文件&lt;/li&gt;
  &lt;li&gt;tree：如下格式组装的文本 zlib 后的文件
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[文件属性 (mode) 类型 (blob/tree) SHA1 文件名]
[...]
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;changeset(commit)：如下格式组装的文本 zlib 后的文件
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[tree SHA1]
[parent [pre-commit SHA1](if exit pre-commit)
[author 环境提交人|提交人 环境提交人邮箱|提交人邮箱 环境时间]
[committer 提交人 提交人邮箱 提交时间]

[{commit message}]
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;heading-提交引起的数据结构变化简图&quot;&gt;提交引起的数据结构变化简图&lt;/h3&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;假设文件经过两次提交，细节分别如下，我们来看下 objects 链的变化&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;0、git init&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;1、first commit log-1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;new file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;file-1.txt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;new file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;dirname-1/file-2.txt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;2、second commit log-2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;deleted&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;dirname-1/file-2.txt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;renamed&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;file-1.txt -&amp;gt; dirname-1/file-1.txt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;new file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;file-3.txt&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;则以日志为时间维度，object 对象为数据维度，数据结构关系如下变化。&lt;/span&gt;

                      &lt;span class=&quot;s&quot;&gt;log-1 -----------------------------------------------→ log-2   ----------→  ...&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;↓                                                      ↓&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;changeset-1(sha1-c1)                                      changeset-2(sha1-c2)&lt;/span&gt; 
                        &lt;span class=&quot;s&quot;&gt;↓                                                      ↓&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;tree-1(sha1-t1)                                         tree-3(sha1-t2)&lt;/span&gt;  
                    &lt;span class=&quot;s&quot;&gt;↙       ↘                                              ↙       ↘&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;(sha1-f1|file-1.txt)blob-1  tree-2(sha1-d1|dirname-1)  (sha1-f3|file-3.txt)blob-3   tree-4(sha1-d2|dirname-1)&lt;/span&gt;
                              &lt;span class=&quot;s&quot;&gt;↓  ↘                                                  ↓   ↘&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;(sha1-f2|file-2.txt)blob-2   ...                         (sha1-f1|file-1.txt)blob-1  ...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;heading-如何设计出一个成功的开源产品&quot;&gt;如何设计出一个成功的开源产品？&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;解决痛点问题&lt;/li&gt;
  &lt;li&gt;极简设计&lt;/li&gt;
  &lt;li&gt;MVP (minimum viable product, 最小可用产品） —— 即使是少部分专业人士才会使用&lt;/li&gt;
  &lt;li&gt;快速发布，快速迭代&lt;/li&gt;
  &lt;li&gt;找到合适接班人&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;heading-git-底层命令实践&quot;&gt;Git 底层命令实践&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;第一次提交的代码包含的 7 个底层命令&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;init-db&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;初始化一个 git 本地仓库。&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;update-cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;输入文件路径，将该文件（或多个文件）加入缓冲区中。&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;write-tree&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;将缓存的目录树信息生成 TREE 对象，并写入对象数据库中。&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;commit-tree&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;将 TREE 对象信息生成 commit 节点对象并提交到版本历史中。&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;cat-file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;由于所有的对象文件都经过 zlib 压缩，因此想要查看文件内容的话需要使用这个工具来解压生成临时文件，以便查看对象文件的内容。&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;show-diff&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;快速比较当前缓存与当前工作区的差异。&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;read-tree&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;根据输入的 TREE 对象 SHA1 值输出打印 TREE 的内容信息。&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Oh，let's try it.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;初始化且添加一个文件，查看 GitDB。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git init-db

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test git add&quot;&lt;/span&gt; &amp;gt; test1.txt

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;-object test1.txt
3bb333e4f50b5bd51844c7a59a0f5b52ba993409

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git add .
&lt;span class=&quot;c&quot;&gt;# 此时 .git/objects 里面会产生一个文件 .git/objects/3b/b333e4f50b5bd51844c7a59a0f5b52ba993409&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git cat-file -t 3bb333e4f50b5bd51844c7a59a0f5b52ba993409
blob

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git cat-file -p 3bb333e4f50b5bd51844c7a59a0f5b52ba993409
 þt e s t   g i t   a d d
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;添加一个文件夹和文件，观察 GitDB。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-dir

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test tree add&quot;&lt;/span&gt; &amp;gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-tree.txt

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;-object &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-dir/test-tree.txt
9fad0267fc3a07507422f4b921c4780b500a53d5

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git add .
&lt;span class=&quot;c&quot;&gt;# 此时 .git/objects 里面会产生一个文件 .git/objects/9f/ad0267fc3a07507422f4b921c4780b500a53d5&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git cat-file -p 9fad0267fc3a07507422f4b921c4780b500a53d5
 þt e s t   t r e e   a d d

&lt;span class=&quot;c&quot;&gt;# 为啥没有生成 tree 文件，解压查看 .git/index 文件，文件名包含了文件路径，到提交的时候会生成 tree&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git ls-files --stage
100644 9fad0267fc3a07507422f4b921c4780b500a53d5 0       &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-dir/test-tree.txt
100644 3bb333e4f50b5bd51844c7a59a0f5b52ba993409 0       test1.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;提交内容，观察 GitDB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;test-commit&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;master &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root-commit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 014237f] &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-commit
 2 files changed, 0 insertions&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 0 deletions&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;-&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 create mode 100644 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-dir/test-tree.txt
 create mode 100644 test1.txt
&lt;span class=&quot;c&quot;&gt;# 此时会产生对应的 tree 和 changeset 对象文件&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;依次解压内容如下&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 此时会产生三个文件，对应的类型分别如下&lt;/span&gt;
commit  .git/objects/01/4237ff974856b594a18dc0710c63ed70c11ee1
tree    .git/objects/17/86de2cabadfcbfbb1ef9b72096d6776a64f207
tree    .git/objects/cc/eef7530fda0c16783241412793f6218b1edc6e

&lt;span class=&quot;c&quot;&gt;# commit 文件解压&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git cat-file -p 014237ff974856b594a18dc0710c63ed70c11ee1
tree 1786de2cabadfcbfbb1ef9b72096d6776a64f207
author petterobam &amp;lt;1460300366@qq.com&amp;gt; 1606888742 +0800
committer petterobam &amp;lt;1460300366@qq.com&amp;gt; 1606888742 +0800

&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-commit

&lt;span class=&quot;c&quot;&gt;# 查看类型&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git cat-file -t 014237ff974856b594a18dc0710c63ed70c11ee1
commit

&lt;span class=&quot;c&quot;&gt;# 提交的 tree 文件解压&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git cat-file -p 1786de2cabadfcbfbb1ef9b72096d6776a64f207
040000 tree cceef7530fda0c16783241412793f6218b1edc6e    &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-dir
100644 blob 3bb333e4f50b5bd51844c7a59a0f5b52ba993409    test1.txt

&lt;span class=&quot;c&quot;&gt;# tree 下面的 tree 文件解压&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git cat-file -p cceef7530fda0c16783241412793f6218b1edc6e
100644 blob 9fad0267fc3a07507422f4b921c4780b500a53d5    &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-tree.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;删除文件 test1.txt 并添加文件 test2.txt&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test index see&quot;&lt;/span&gt; &amp;gt; test2.txt
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rm -rf test1.txt
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git add .
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;delete test1 and add test2&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;master b543ac9] delete test1 and add test2
 2 files changed, 0 insertions&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 0 deletions&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;-&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 delete mode 100644 test1.txt
 create mode 100644 test2.txt
&lt;span class=&quot;c&quot;&gt;# 发现产生了两个 object 文件&lt;/span&gt;
.git/objects/b5/43ac952ba32ad201f2e55d167d00dd450d1e66
.git/objects/84/04b2676456885b00f239be95674e9c4ff5550a
&lt;span class=&quot;c&quot;&gt;# 依次解压如下&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git cat-file -p b543ac952ba32ad201f2e55d167d00dd450d1e66
tree 8404b2676456885b00f239be95674e9c4ff5550a
parent 014237ff974856b594a18dc0710c63ed70c11ee1
author petterobam &amp;lt;1460300366@qq.com&amp;gt; 1606921927 +0800
committer petterobam &amp;lt;1460300366@qq.com&amp;gt; 1606921927 +0800

delete test1 and add test2
------------------------------------
git cat-file -p 8404b2676456885b00f239be95674e9c4ff5550a
040000 tree cceef7530fda0c16783241412793f6218b1edc6e    &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-dir
100644 blob 06224df7b6d1d861f213721fd8f1720771fda6ae    test2.txt
&lt;span class=&quot;c&quot;&gt;# 删除 text1.txt 并不会删除其对应的 blob 文件，而是生成一个新的 changeset 文件，changeset 文件指向一个新的 tree 文件&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;再观察下 .git 下其他文件的情况&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.git/logs/refs/heads/master
.git/logs/HEAD
.git/refs/heads/master
里面有一个最近一次 commit 产生 changeset 的 sha1
---------------------------
.git/COMMIT_EDITMSG
里面记录的是最近一次 commit 的 message

&lt;span class=&quot;c&quot;&gt;# 整个项目根目录如果有提交记录，也是一个 tree 文件&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git cat-file -p &lt;span class=&quot;s1&quot;&gt;'master^{tree}'&lt;/span&gt;
040000 tree cceef7530fda0c16783241412793f6218b1edc6e    &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;-dir
100644 blob 3bb333e4f50b5bd51844c7a59a0f5b52ba993409    test1.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;自己尝试下，通过 GitDB 里面的文件，反查对应的文档&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c&quot;&gt;# 打开任何一个 git 项目在 .git/objects 里面随便找一个文件夹（xx）+ 文件（x{38}）&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git cat-file -p xxx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;38&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;to be continue …&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;相关参考资料：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Pro Git 第二版：&lt;a href=&quot;https://git-scm.com/book/en/v2&quot;&gt;英文版&lt;/a&gt; # &lt;a href=&quot;https://git-scm.com/book/zh/v2&quot;&gt;中文版&lt;/a&gt; # &lt;a href=&quot;https://gitee.com/progit/index.html&quot;&gt;高亮版&lt;/a&gt; # &lt;a href=&quot;https://www.progit.cn/&quot;&gt;侧边菜单版&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hutusi.com/articles/the-greatest-git-commit&quot;&gt;改变世界的一次代码提交&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.petterobam.cn/blog/2020/12/03/git-first-commit-code-review-and-think/&quot;&gt;Git 源码·LinusTorvalds 第一次提交 CR 和启发&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><category term="Git" /><category term="底层原理" /><summary type="html">Git 源码第一次提交 CodeReview</summary></entry><entry><title type="html">用 Java 制作命令行工具并提供自动安装脚本</title><link href="/blog/2020/10/31/use-java-make-cmd-util-and-install-script/" rel="alternate" type="text/html" title="用 Java 制作命令行工具并提供自动安装脚本" /><published>2020-10-31T00:00:00+00:00</published><updated>2020-10-31T00:00:00+00:00</updated><id>/blog/2020/10/31/use-java-make-cmd-util-and-install-script</id><content type="html" xml:base="/blog/2020/10/31/use-java-make-cmd-util-and-install-script/">&lt;h1 id=&quot;heading-命令行应用特征&quot;&gt;命令行应用特征&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;入口唯一：API 唯一
一行入参：线性传参
文本出参：Console 输出
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-入口唯一api-唯一&quot;&gt;入口唯一（API 唯一）&lt;/h2&gt;

&lt;p&gt;指令格式：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;arguments]

↓变式 1

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;option1] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;argument1] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;option2] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;argument2] ... &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;optionN] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;argumentN]

↓变式 2

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;option1] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;argument1] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;argument2] ... &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;argumentN] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;option2] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;argument1] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;argument2] ... &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;argumentN]

↓

...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;通常，一个命令被开发出来，只会有一种格式，而所有变化都在 &lt;code class=&quot;highlighter-rouge&quot;&gt;[options]&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;[arguments]&lt;/code&gt; 里面，它们组合理论上可以产生无限种变化。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[options] 动作/业务/行为
[arguments] 变量/参数
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-一行入参线性传参&quot;&gt;一行入参（线性传参）&lt;/h2&gt;

&lt;p&gt;由于换行就会执行命令，所以传入的参数只有一维的结构，故【线性传参】。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;arguments]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] 特殊参数，定制化动作/业务/行为
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;arguments] 普通参数，依赖 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参数分隔：通过空格可以天然分隔参数，从而实现&lt;code class=&quot;highlighter-rouge&quot;&gt;【线性传参】-&amp;gt;【参数数组】&lt;/code&gt;，若单个参数里面有空格，则用英文引号括起来。&lt;/p&gt;

&lt;h2 id=&quot;heading-文本出参console-输出&quot;&gt;文本出参（Console 输出）&lt;/h2&gt;

&lt;p&gt;命令是在控制台执行的，不管是什么样的控制台，由于没有特殊的作图或制表语法，所有的输出都是字符集的一个组合。&lt;/p&gt;

&lt;p&gt;而二维的字符集能够产生什么样的输出，很多时候需要我们的想象力，比如表格的输出： ↓&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;util -tt title1,title2,t3 text1,text2,t3 longlongcontext,test1,te2
 工具类型：文字表格【-tt】
 分隔符：【,】
 +----------------+-------+----+
 |title1          |title2 |t3  |
 +----------------+-------+----+
 |text1           |text2  |t3  |
 +----------------+-------+----+
 |longlongcontext |test1  |te2 |
 +----------------+-------+----+

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;util -tt -s &lt;span class=&quot;s2&quot;&gt;&quot;#&quot;&lt;/span&gt; title1#title2#t3 text1#text2#t3 &lt;span class=&quot;s2&quot;&gt;&quot;longlongcontext#test1#content with space&quot;&lt;/span&gt;
 工具类型：文字表格【-tt】
 动作：自定义分隔符【-s】
 分隔符：【#】
 +----------------+-------+-------------------+
 |title1          |title2 |t3                 |
 +----------------+-------+-------------------+
 |text1           |text2  |t3                 |
 +----------------+-------+-------------------+
 |longlongcontext |test1  |content with space |
 +----------------+-------+-------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;heading-java-实现&quot;&gt;Java 实现&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;可执行文件：Jar
main 函数接收参数
预处理
Maven 打包
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-可执行文件jar&quot;&gt;可执行文件（Jar）&lt;/h2&gt;

&lt;p&gt;打一个可执行的 Jar，通过命令执行：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -jar 包名。jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当然也可以把 Jar 打包成可执行文件：&lt;a href=&quot;https://www.ej-technologies.com/download/exe4j/files&quot;&gt;exe4j&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;heading-main-函数接收参数&quot;&gt;main 函数接收参数&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// excute cmd&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MainApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;excute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;包名。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$参数&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$参数&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$参数 3&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;↓&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;MainApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;excute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$参数 1&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$参数 2&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$参数 3&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-预处理&quot;&gt;预处理&lt;/h2&gt;

&lt;p&gt;所谓的预处理就是把普通参数进行提取，归类为 [options] 对 [agraments] 的映射。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;包名。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;类型&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;动作&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;类型&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;用于寻找具体的业务实现类，对应模块&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;动作&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;用于定位具体的执行代码块或调用的函数，具体到功能&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;普通参数，依赖&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;↓&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;部分&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MainApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;代码片段&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseCmdUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmdUtilList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;CmdClassUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAllSubClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BaseCmdUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// args = new String[] {  };&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// args = new String[] { &quot;-h&quot; };&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// args = new String[] { &quot;-t&quot;,&quot;-f&quot;,&quot;now&quot; };&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; 请传入工具类型参数：-help | -h（帮助）！&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reGetParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// excute cmd&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MainApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;excute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;excute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// help go excute&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-help&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-h&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;MainApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// util go excute&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseCmdUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MainApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cmdUtilList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CmdClassUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invokeStaticMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;canDeal&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;CmdClassUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invokeStaticMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;excute&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// other go excute&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; 未知工具类型：&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; 请运行：util -h 查看帮助&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// exception go excute&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;----------------------------------!! 异常发生 !!--------------------------------&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;--------------------------------------------------------------------------------&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; Terminal 命令行工具 V0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;------------------------------------------------------------------------------&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; util [工具类型] [动作类型] [参数。..（多个空格分隔，含空格的参数用 \&quot; \&quot; 括起来）]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseCmdUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MainApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cmdUtilList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;CmdClassUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invokeStaticMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;help&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;由此，可以看到，所有命令行工具类都实现了&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseCmdUtils&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;这个基类，而且都实现了三个静态方法：&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;（使用说明）&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canDeal&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;（是否支持类型参数判断）&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;excute&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;（执行动作）&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;由于工具类的寻找和方法调用都用反射自动处理，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MainApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;里面的代码已经成为了通用的预处理代码&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;所以，后续需要添加什么新的工具直接添加一个&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseCmdUtils&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;扩展类并实现其中三个静态方法即可&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;PS：具体代码逻辑参见：&lt;a href=&quot;https://github.com/petterobam/util-cmd&quot;&gt;https://github.com/petterobam/util-cmd&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;heading-maven-打包&quot;&gt;Maven 打包&lt;/h2&gt;

&lt;p&gt;那么问题来了，如何打出一个单文件的可执行 Jar 呢？&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--打包方式 2，mvn package assembly:single，生成单个 jar--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-assembly-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.5.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;archive&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;mainClass&amp;gt;&lt;/span&gt;com.github.terminal.MainApp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mainClass&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/archive&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;descriptorRefs&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;descriptorRef&amp;gt;&lt;/span&gt;jar-with-dependencies&lt;span class=&quot;nt&quot;&gt;&amp;lt;/descriptorRef&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/descriptorRefs&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--不加 jar-with-dependencies 后缀--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;appendAssemblyId&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/appendAssemblyId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--包名用项目名--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;finalName&amp;gt;&lt;/span&gt;${project.name}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/finalName&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;make-assembly&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span class=&quot;nt&quot;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;single&lt;span class=&quot;nt&quot;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;heading-一键安装&quot;&gt;一键安装&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell 脚本自动安装
cmd 批处理自动安装
powershell 自动安装
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;所谓自动安装就是将 &lt;code class=&quot;highlighter-rouge&quot;&gt;java -jar 包名。jar &lt;/code&gt; 绑定某个快捷命令，比如 &lt;code class=&quot;highlighter-rouge&quot;&gt;util&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这个在 shell 里面就直接通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;alias util=java -jar $PROJECT_PATH/target/util-cmd.jar&lt;/code&gt; 指定了，其他里面同理。&lt;/p&gt;

&lt;h2 id=&quot;heading-shell-脚本自动安装&quot;&gt;shell 脚本自动安装&lt;/h2&gt;

&lt;p&gt;自动安装脚本如下：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# author:ouyangjie02&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Usage: util cmd util install&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# shell path&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;SHELL_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;dirname &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; shell current path&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cd &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SHELL_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$SHELL_PATH&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
&lt;span class=&quot;nv&quot;&gt;PROJECT_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; check util alias in profile is exit&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;cat ~/.bash_profile | grep &lt;span class=&quot;s2&quot;&gt;&quot;alias util=java -jar&quot;&lt;/span&gt;&amp;gt;/dev/null
&lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; exit util alias in profile then skip&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; add util alias to profile&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;alias util=java -jar &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PROJECT_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/target/util-cmd.jar&quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_profile
  &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bash_profile
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; check util alias in zsh is exit&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;cat ~/.zshrc | grep &lt;span class=&quot;s2&quot;&gt;&quot;alias util=java -jar&quot;&lt;/span&gt;&amp;gt;/dev/null
&lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; exit util alias in zsh then skip&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; add util alias to zsh&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;alias util=java -jar &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PROJECT_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/target/util-cmd.jar&quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.zshrc
  &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.zshrc
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; call mvn package&quot;&lt;/span&gt;
mvn package
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;if [util -help] not useful, please reopen terminal !&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heading-cmd-批处理自动安装&quot;&gt;cmd 批处理自动安装&lt;/h2&gt;

&lt;p&gt;Windows 的命令行窗口没办法使用 Alias，只能通过注册表预执行 doskey 命令的批处理文件，为当前窗口注入快捷命令&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;新建一个 cmd-alia.bat 批处理文件，添加 doskey 快捷命令指定
    &lt;pre&gt;&lt;code class=&quot;language-bat&quot;&gt; :: util-cmd Terminal 常用小功能命令行工具 
 @doskey util=java -jar ${projectPath}\util-cmd.jar $* 
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;新建一个 cmd-alia.reg 文件
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Windows Registry Editor Version 5.00

 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;HKEY_CURRENT_USER&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;oftware&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;icrosoft&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;ommand Processor]
 &lt;span class=&quot;s2&quot;&gt;&quot;AutoRun&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;cmd-alias.bat&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;双击执行 cmd-alia.reg 文件，添加注册表&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;cmd-alia.reg 提前建好，写成自动化脚本就是下面这个：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bat&quot;&gt;@Echo Off
echo &quot;----- utf-8 mode&quot;
chcp 65001
@Title util-cmd-install@ouyangjie02
echo &quot;----- bat current path&quot;
Set curr_path=%~dp0
echo &quot;----- remove bin/&quot;
Set project_path=%curr_path:~0,-4%
echo &quot;----- cd %project_path%&quot;
cd %project_path%
echo &quot;----- call mvn package&quot;
call mvn package
echo &quot;----- check is exit util alias&quot;
find /I &quot;@doskey util&quot; C:\cmd-alias.bat
IF ERRORLEVEL 1 goto 1
IF ERRORLEVEL 0 goto 0
:0
echo &quot;----- exit util alias then exit&quot;
echo &quot;if [util -help] not useful, please reopen terminal !&quot;
pause
goto exit
:1
:: add \r\n to end of C:\cmd-alias.bat
echo &quot;----- add util alias&quot;
echo :: util-cmd Terminal 常用小功能命令行工具 &amp;gt;&amp;gt; C:\cmd-alias.bat
echo @doskey util=java -jar %project_path%target\util-cmd.jar $* &amp;gt;&amp;gt; C:\cmd-alias.bat
:: echo @doskey util-update=cd %project_path% ^&amp;amp;^&amp;amp; git pull ^&amp;amp;^&amp;amp; mvn package  &amp;gt;&amp;gt; C:\cmd-alias.bat
echo &quot;----- register cmd-alias.bat&quot;
regedit /s cmd-alias.reg
echo &quot;if [util -help] not useful, please reopen terminal !&quot;
refreshenv
pause
goto exit
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-powershell-自动安装&quot;&gt;powershell 自动安装&lt;/h2&gt;

&lt;p&gt;powershell 的配置文件和 Linux 类似，将预加载命令添加到 &lt;code class=&quot;highlighter-rouge&quot;&gt;notepad $PROFILE&lt;/code&gt; 文件里面就能达到效果&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 由于 powershell 的 Add-Alias 命令无法追随参数，所以用的 function 命令预加载指定快捷命令：&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;util &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; java -jar &lt;span class=&quot;nv&quot;&gt;$project_path&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;arget&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;til-cmd.jar &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;5]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;自动安装脚本如下：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; utf-8 mode&quot;&lt;/span&gt;
chcp 65001
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; ps1 current path&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$curr_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Split-Path -Parent &lt;span class=&quot;nv&quot;&gt;$MyInvocation&lt;/span&gt;.MyCommand.Definition
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; remove bin/&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$project_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$curr_path&lt;/span&gt;.Substring&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0,&lt;span class=&quot;nv&quot;&gt;$curr_path&lt;/span&gt;.Length-4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; cd &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$project_path&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$project_path&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; call mvn package&quot;&lt;/span&gt;
mvn package
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-----&amp;gt; add util alias to powershell&quot;&lt;/span&gt;
Add-Content &lt;span class=&quot;nv&quot;&gt;$PROFILE&lt;/span&gt; -Encoding utf8 -Value &lt;span class=&quot;s2&quot;&gt;&quot;# util-cmd utils &quot;&lt;/span&gt;
Add-Content &lt;span class=&quot;nv&quot;&gt;$PROFILE&lt;/span&gt; -Encoding utf8 -Value &lt;span class=&quot;s2&quot;&gt;&quot;function util { java -jar &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$project_path&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;arget&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;til-cmd.jar &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;5]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;
Add-Content &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PROFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -Encoding utf8 -Value &quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;util-update &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$project_path&lt;/span&gt;; git pull; mvn package; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;
echo &quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;util -help] not useful, please reopen terminal !&lt;span class=&quot;s2&quot;&gt;&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>欧阳Boy_Petter</name><email>1460300366@qq.com</email></author><category term="命令行工具" /><category term="静态多态反射" /><summary type="html">命令行应用特征</summary></entry></feed>